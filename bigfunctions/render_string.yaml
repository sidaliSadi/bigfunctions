type: function_js
category: transform_string
author:
  name: Paul Marcombes
  url: https://www.linkedin.com/in/paul-marcombes
  avatar_url: "https://media-exp1.licdn.com/dms/image/C4E03AQF92ENRMYC3Mw/profile-displayphoto-shrink_800_800/0/1656924490995?e=1675900800&v=beta&t=Ertn0DSUvqzexmymI6NDba3TrXaSLRM_cQ5dxjmTkzo"
description: Render template with context using nunjucks.js templating library
arguments:
  - name: template
    type: string
  - name: context
    type: string
output:
  name: rendered_content
  type: string
examples:
  - description: ""
    arguments:
      - "'Hello {{ username }}'"
      - "'{\"username\": \"James\"}'"
    output: Hello James
    region: ALL
code: |
  context = JSON.parse(context);
  var env = nunjucks.configure();

  env.addFilter('add_thousands_separators_to_integers', function(x) {
      if (Number.isInteger(x)) {
        return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
      }
      return x;
  });

  env.addFilter('as_percentage', function(x) {
      if (x == 0) {
        return '0 %';
      }
      if (x < 0.001) {
        return '< 0.1 %';
      }
      if (x > 0.01) {
        return Math.round(x * 100).toString() + ' %';
      }
      return (0.1 * Math.round(x * 1000)).toString() + ' %';
  });

  env.addFilter('size_bytes_pretty', function(x) {
      if (x > 1e12) {
        return Math.round(x / (1024*1024*1024*1024)).toString() + ' TB';
      }
      if (x > 1e9) {
        return Math.round(x / (1024*1024*1024)).toString() + ' GB';
      }
      if (x > 1e6) {
        return Math.round(x / (1024*1024)).toString() + ' MB';
      }
      return Math.round(x / (1024)).toString() + ' KB';
  });

  return env.renderString(template, context);
libraries:
  - nunjucks.min.js
